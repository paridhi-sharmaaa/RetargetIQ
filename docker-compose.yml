services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 10s
      timeout: 5s
      retries: 5


  user-activity-service:
    build:
      context: ./user-activity-service
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    environment:
      spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:9092}:

  event-processor-service:
    build:
      context: ./event-processor-service
    ports:
      - "8081:8081"   # ‚Üê Add this line
    depends_on:
      - kafka
    environment:
      spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:9092}:

  analytics-service:
    build:
      context: ./analytics-service
    ports:
      - "8082:8082"
    depends_on:
      - kafka
    environment:
      spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:9092}:

  order-service:
    build:
      context: ./order-service
    ports:
      - "8083:8083"
    depends_on:
      - kafka
    environment:
      - SPRING_CONFIG_LOCATION=classpath:/application.properties
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: analytics_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - kafka-network

volumes:
  pgdata:

networks:
  kafka-network:
    driver: bridge
